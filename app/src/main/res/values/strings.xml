<resources>
    <string name="app_name">DesignPatternDemo</string>
    <string name="card">Card</string>
    <string name="cash">Cash</string>
    <string name="coupon">COUPON</string>
    <string name="love">LOVE</string>
    <string name="hello">This is a title!</string>
    <string name="sub_head">This is sub header!</string>
    <string name="content">So far in this book, all the layouts we have constructed have been static XMLdefinitions. As you would expect, however, it is perfectly possible to construct and inflate UIs dynamically from our source code. Furthermore, Android layouts lend themselves very nicely to the builder pattern, as we saw with our alert dialog, as they are comprised of an ordered collection of smaller objects</string>
    <string name="longstring">So far in this book, all the layouts we have constructed have been static XMLdefinitions. As you would expect, however, it is perfectly possible to construct and inflate UIs dynamically from our source code. Furthermore, Android layouts lend themselves very nicely to the builder pattern, as we saw with our alert dialog, as they are comprised of an ordered collection of smaller objectsSo far in this book, all the layouts we have constructed have been static XMLdefinitions. As you would expect, however, it is perfectly possible to construct and inflate UIs dynamically from our source code. Furthermore, Android layouts lend themselves very nicely to the builder pattern, as we saw with our alert dialog, as they are comprised of an ordered collection of smaller objectsSo far in this book, all the layouts we have constructed have been static XMLdefinitions. As you would expect, however, it is perfectly possible to construct and inflate UIs dynamically from our source code. Furthermore, Android layouts lend themselves very nicely to the builder pattern, as we saw with our alert dialog, as they are comprised of an ordered collection of smaller objects</string>
</resources>
